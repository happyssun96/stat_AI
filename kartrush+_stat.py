# -*- coding: utf-8 -*-
"""kartrush+_stat.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ttJzkA5FZ_Di0JaNhoQOoHh4y93phfTh
"""

import numpy, cv2, os, re, pandas
from matplotlib import pyplot as plt

from google.colab import drive
drive.mount("/content/gdrive")
src_img_location = "/content/gdrive/My Drive/kartrushplus/"

#FIXME
input_name = "파라곤"

src_image = cv2.imread(src_img_location + input_name + ".jpg", cv2.IMREAD_COLOR)
src_image = cv2.cvtColor(src_image, cv2.COLOR_BGR2RGB)

#Show imgage with matplitlib
plt.imshow(src_image)
plt.show()

src_image.shape

stat_roi = src_image[160:400, 1810:2050]
plt.imshow(stat_roi)
plt.show()

stat_roi_gray = cv2.cvtColor(stat_roi, cv2.COLOR_RGB2GRAY)
plt.imshow(stat_roi_gray, cmap="gray")
plt.show()

ret, thresh = cv2.threshold(stat_roi_gray, 127, 255, 0)
contours, hierachy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

max_idx = 0
max_area = 0

for i, contour in enumerate(contours):
  area = cv2.contourArea(contour)
  if area > max_area:
    max_area = area
    max_idx = 1

cv2.drawContours(stat_roi, [contours[max_idx]], 0, (255, 255, 0), 1)

plt.imshow(stat_roi)
plt.show()

print(input_name, "'s stat : ", max_area)

def calculate_stat(input_img):
  src_image = cv2.imread(src_img_location + input_img + ".jpg", cv2.IMREAD_COLOR)
  src_image = cv2.cvtColor(src_image, cv2.COLOR_BGR2RGB)
  stat_roi = src_image[160:400, 1810:2050]
  stat_roi_gray = cv2.cvtColor(stat_roi, cv2.COLOR_RGB2GRAY)
  ret, thresh = cv2.threshold(stat_roi_gray, 127, 255, 0)
  contours, hierachy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
  max_idx = 0
  max_area = 0
  for i, contour in enumerate(contours):
    area = cv2.contourArea(contour)
    if area > max_area:
      max_area = area
      max_idx = 1
  cv2.drawContours(stat_roi, [contours[max_idx]], 0, (255, 255, 0), 1)
  return stat_roi, max_area

kart_list = os.listdir(src_img_location)
kart_list = [re.sub('.jpg+', '', _) for _ in kart_list]
print(kart_list)

stat_dict = {}

for kart in kart_list:
  _, area = calculate_stat(kart)
  stat_dict[kart] = area

df = pandas.DataFrame(list(stat_dict.items()), columns= ['이름', '스탯 총합'])
df = df.sort_values(by=['스탯 총합'], ascending = False)
pandas.set_option("display.max_rows", None, "display.max_columns", None)
from IPython.display import display, HTML

display(HTML(df.to_html()))